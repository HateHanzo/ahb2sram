
sram_cen <= write_vld | read_vld
sram_wen <= ~write_vld_d1
sram_addr = ((~ready_out) | write_vld_d1) ? ahb_addr_f1[10:2] ：ahb_addr[10:2]
sram_wdata = ahb_wdata
ahb_rdata = sram_rdata
ready_out <= write_vld_d1 & read_vld


对于各子模块来看，hready信号有两个，一个是输入信号，该信号与ahb_decoder
产生的HREADY相连，也可以称之为gobal_ready。每个子slave模块又有一个
hreadyo_xxx输出信号。gobal_ready如何产生呢？各slave子模块的readyo_xxx信号
都会送给一个mux，然后由ahb_decoder产生gobal_ready。一种常见的做法是将地址
译码产生ahb_selx的逻辑和mux产生gobal_ready的逻辑放在同一个.v文件中。
那么各子slave模块的hreadyo_xxx和gobal_ready是什么关系呢？可以理解为gobal_ready
是所有子slave模块hreadyo_xxx的“线与”逻辑，对于每个子slave模块而言，其自身的
hreadyo_xxx拉高的情况下，有可能会看到gobal_ready拉低，但是当其将hreadyo_xxx拉低
时，那么gobal_ready一定是拉低的。

https://blog.csdn.net/qq_43365647/article/details/103674133
https://blog.csdn.net/qq_43365647/article/details/103108500
https://www.cnblogs.com/wt-seu/p/13289573.html
http://bbs.eetop.cn/thread-263345-1-1.html